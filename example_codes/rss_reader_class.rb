#!/usr/bin/ruby -w

require 'feedjira'

=begin
RSS/Atom aggregator

1. Read file given as a parameter. For each line (an url):
2. Check the url point to a valid rss/atom feed
3. Get the feed title and description. These might be nil,
   if so replace them with "No title" and "No description".
4. Write an opml file with item for each url/title/description.

Example opml file
<?xml version="1.0" encoding="utf-8" ?>
<opml version="1.1">
<head>
<title>Generated by Seyoung</title>
<dateCreated>Sat, 05 Dec 2015 11:54:16 +0100</dateCreated>
</head>
<body>
<outline title="www.hs.fi/rss/?osastot=politiikka" text="www.hs.fi/rss/?osastot=politiikka" type="rss" xmlUrl="http://www.hs.fi/rss/?osastot=politiikka" />
</body></opml>

Ignore invalid urls and report them to a user.
Definition of invalid urls:
  1.Non-existing urls
  2.Invalid urls. ex) missing http://

You can read the whole file to ram and keep all urls,
titles and descriptions in ram until you write the opml.
Or you can read the file line by line and add items to the opml as you go.
=end

def read_file(file_name)
    # Split a text file by lines without newline characters
    return File.readlines(file_name).each {|l| l.chomp!}
end

class Feed

    def initialize(url)
        @url = url
        @feed, @type = parse_url
        @entries = get_entries
        @time = Time.new
    end

    def get_feed_type(url=@url)
        if url.include? "rss"
            return "rss"
        else
            return "atom"
        end
    end

    def parse_url(url=@url)
        feed = Feedjira::Feed.fetch_and_parse(url)
        type = get_feed_type
        return feed, type
    end

    def get_entries(feed=@feed, type=@type)
        entries = "<body>"
        feed.entries.each do |entry|
            entries += "\n<outline title=\"#{entry.title}\" text=\"#{entry.title}\" type=\"#{type}\" xmlUrl=\"#{entry.url}\"/>\n"
        end
        return entries + "</body>"
    end

    def get_opml_header(feed=@feed)
        opml_header = "<?xml version=\"1.0\" encoding=\"utf-8\" ?><opml version=\"1.1\">\n<head>\n"
        title = "<title>Generated by Defcomb OMPLBuilder: #{@time}</title>\n"
        dateCreated = "<dateCreated>#{@time}</dateCreated>\n</head>\n\n"
        return opml_header + title + dateCreated
    end

    def write_opml(save_path="")
        opml = get_opml_header + @entries + "\n</opml>"
        file_name = "#{save_path}#{@feed.description} - #{@time}.opml"
        File.write(file_name, opml)
    end

    def summary
        puts @url, @feed, @type, @entries
    end
end



def main(url_file_name, save_path="")
    urls = read_file(url_file_name)

    urls.each do |url|
        f=Feed.new(url)
        f.write_opml save_path
    end
end

main("dummy_urls.txt", "../opml/")
